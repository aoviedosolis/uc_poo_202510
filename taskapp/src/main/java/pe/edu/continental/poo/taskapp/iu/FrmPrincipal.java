/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pe.edu.continental.poo.taskapp.iu;

import jakarta.persistence.EntityManagerFactory;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import pe.edu.continental.poo.taskapp.controladores.ListaTareasJpaController;
import pe.edu.continental.poo.taskapp.controladores.TareaJpaController;
import pe.edu.continental.poo.taskapp.controladores.exceptions.NonexistentEntityException;
import pe.edu.continental.poo.taskapp.entidades.ListaTareas;
import pe.edu.continental.poo.taskapp.entidades.Tarea;
import pe.edu.continental.poo.taskapp.entidades.Usuario;
import pe.edu.continental.poo.taskapp.singleton.EntityManagerSingleton;

/**
 *
 * @author aoviedo
 */
public class FrmPrincipal extends javax.swing.JFrame {
    
    private Usuario usuario;
    private EntityManagerFactory emf;
    private ListaTareas listaActual;

    /**
     * Creates new form FrmPrincipal
     */
    public FrmPrincipal() {
        initComponents();
        emf = EntityManagerSingleton.getInstance().getEntityManagerFactory();
        // Lanzamos la ventana de autenticaci√≥n
        DlgLogin login = new DlgLogin(this, true);
        login.setVisible(true);
        usuario = login.getUsuario();
        actualizarListaTareas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlLista = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstListaTareas = new javax.swing.JList<>();
        jPanel3 = new javax.swing.JPanel();
        btnNuevaLista = new javax.swing.JButton();
        btnBorrarLista = new javax.swing.JButton();
        btnMostrarLista = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        pnlTareas = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTareas = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        btnNuevaTarea = new javax.swing.JButton();
        btnModificarTarea = new javax.swing.JButton();
        btnBorrarTarea = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnArchivo = new javax.swing.JMenu();
        mniSalir = new javax.swing.JMenuItem();
        mnAyuda = new javax.swing.JMenu();
        mniAcerca = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.BorderLayout(10, 10));

        pnlLista.setLayout(new java.awt.BorderLayout());

        lstListaTareas.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstListaTareasValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstListaTareas);

        pnlLista.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        btnNuevaLista.setText("+");
        btnNuevaLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaListaActionPerformed(evt);
            }
        });
        jPanel3.add(btnNuevaLista);

        btnBorrarLista.setText("-");
        btnBorrarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarListaActionPerformed(evt);
            }
        });
        jPanel3.add(btnBorrarLista);

        btnMostrarLista.setText("*");
        jPanel3.add(btnMostrarLista);

        pnlLista.add(jPanel3, java.awt.BorderLayout.PAGE_END);

        jLabel1.setFont(new java.awt.Font("Adwaita Sans", 1, 15)); // NOI18N
        jLabel1.setText("Listas de tareas");
        pnlLista.add(jLabel1, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(pnlLista, java.awt.BorderLayout.LINE_START);

        pnlTareas.setLayout(new java.awt.BorderLayout());

        tblTareas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nombre", "Descripcion", "Prioridad", "Completado", "Fecha inicio", "Fecha fin"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblTareas);

        pnlTareas.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        btnNuevaTarea.setText("Nueva tarea");
        btnNuevaTarea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaTareaActionPerformed(evt);
            }
        });

        btnModificarTarea.setText("Modificar tarea");

        btnBorrarTarea.setText("Borrar tarea");
        btnBorrarTarea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarTareaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnModificarTarea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNuevaTarea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBorrarTarea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(btnNuevaTarea)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModificarTarea)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBorrarTarea)
                .addContainerGap(365, Short.MAX_VALUE))
        );

        pnlTareas.add(jPanel4, java.awt.BorderLayout.EAST);

        jLabel2.setFont(new java.awt.Font("Adwaita Sans", 1, 15)); // NOI18N
        jLabel2.setText("Tareas");
        pnlTareas.add(jLabel2, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(pnlTareas, java.awt.BorderLayout.CENTER);

        mnArchivo.setText("Archivo");

        mniSalir.setText("Salir");
        mniSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniSalirActionPerformed(evt);
            }
        });
        mnArchivo.add(mniSalir);

        jMenuBar1.add(mnArchivo);

        mnAyuda.setText("Ayuda");

        mniAcerca.setText("Acerca de ...");
        mniAcerca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniAcercaActionPerformed(evt);
            }
        });
        mnAyuda.add(mniAcerca);

        jMenuBar1.add(mnAyuda);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mniAcercaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniAcercaActionPerformed
        // TODO add your handling code here:
        DlgAcerca dlg = new DlgAcerca(this, true);
        dlg.setVisible(true);
    }//GEN-LAST:event_mniAcercaActionPerformed

    private void mniSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniSalirActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_mniSalirActionPerformed

    private void btnNuevaListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaListaActionPerformed
        // TODO add your handling code here:
        DlgLista dlgLista = new DlgLista(this, true, usuario);
        dlgLista.setVisible(true);
        actualizarListaTareas();
    }//GEN-LAST:event_btnNuevaListaActionPerformed

    private void btnNuevaTareaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaTareaActionPerformed
        // TODO add your handling code here:
        DlgTarea dlgTarea = new DlgTarea(this, true,listaActual);
        dlgTarea.setVisible(true);
        mostrarTareas(listaActual.getId());
    }//GEN-LAST:event_btnNuevaTareaActionPerformed

    private void btnBorrarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarListaActionPerformed
        // TODO add your handling code here:
        listaActual = new ListaTareasJpaController(emf).getListaTareas(usuario.getId(), lstListaTareas.getSelectedValue());
        ListaTareasJpaController ltjc = new ListaTareasJpaController(emf);
        TareaJpaController tjc = new TareaJpaController(emf);
        
        int respuesta = JOptionPane.showConfirmDialog(this, "¬øEsta seguro de borrar la lista?", "Borrar lista", JOptionPane.YES_NO_OPTION);
        
        if(respuesta==JOptionPane.YES_OPTION){
            try {
                
                for (Tarea tarea : listaActual.getTareas()) {
                    tjc.destroy(tarea.getId());
                }
                
                ltjc.destroy(listaActual.getId());
            } catch (NonexistentEntityException ex) {
                Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        actualizarListaTareas();
    }//GEN-LAST:event_btnBorrarListaActionPerformed

    private void lstListaTareasValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstListaTareasValueChanged
        // TODO add your handling code here:
        if(!evt.getValueIsAdjusting()){
            listaActual = new ListaTareasJpaController(emf).getListaTareas(usuario.getId(), lstListaTareas.getSelectedValue());
            mostrarTareas(listaActual.getId());
        }
    }//GEN-LAST:event_lstListaTareasValueChanged

    private void btnBorrarTareaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarTareaActionPerformed
        // TODO add your handling code here:
        Long idTarea = (Long)tblTareas.getValueAt(tblTareas.getSelectedRow(), 0);
        int respuesta = JOptionPane.showConfirmDialog(this, "¬øEsta seguro de borrar la tarea?", "Borrar tarea", JOptionPane.YES_NO_OPTION);
        
        if(respuesta == JOptionPane.YES_OPTION){
            try {
                TareaJpaController tjc = new TareaJpaController(emf);
                tjc.destroy(idTarea);
            } catch (NonexistentEntityException ex) {
                Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnBorrarTareaActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrarLista;
    private javax.swing.JButton btnBorrarTarea;
    private javax.swing.JButton btnModificarTarea;
    private javax.swing.JButton btnMostrarLista;
    private javax.swing.JButton btnNuevaLista;
    private javax.swing.JButton btnNuevaTarea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> lstListaTareas;
    private javax.swing.JMenu mnArchivo;
    private javax.swing.JMenu mnAyuda;
    private javax.swing.JMenuItem mniAcerca;
    private javax.swing.JMenuItem mniSalir;
    private javax.swing.JPanel pnlLista;
    private javax.swing.JPanel pnlTareas;
    private javax.swing.JTable tblTareas;
    // End of variables declaration//GEN-END:variables

    private void actualizarListaTareas() {
        ListaTareasJpaController ltjc = new ListaTareasJpaController(emf);
        lstListaTareas.setModel(new AbstractListModel<String>(){
            ArrayList<ListaTareas> listas = new ArrayList<>(ltjc.findListaTareasByUsuario(usuario.getId()));
            @Override
            public int getSize() {
                return listas.size();
            }

            @Override
            public String getElementAt(int index) {
                return listas.get(index).getNombre();
            }
        });
    }

    private void mostrarTareas(Long id) {
        DefaultTableModel modelo = (DefaultTableModel) tblTareas.getModel();
        modelo.getDataVector().clear();
        
        List<Tarea> tareas = new TareaJpaController(emf).findTareaEntitiesByLista(id);
        
        for (Tarea tarea : tareas) {
            modelo.addRow(tarea.toArray());
        }
    }
}
